{
  "address": "0xe688AeEF2C11745336a651cE0b116d4Af6073D26",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_scharfnado",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "dispense",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "scharfnado",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_scharfnado",
          "type": "address"
        }
      ],
      "name": "setScharfnado",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x12b05e6ccddc52e3c7d413e5242004518da13cc6048d4dc22ab9c2c93cfa97a8",
  "receipt": {
    "to": null,
    "from": "0xE23B5A651A4f20B6029f5727E4850d364dCd90f8",
    "contractAddress": "0xe688AeEF2C11745336a651cE0b116d4Af6073D26",
    "transactionIndex": 0,
    "gasUsed": "558306",
    "logsBloom": "0x
    "blockHash": "0x62698d8d002c63f3680de42dead415cc233fb037f218de912f60e1b16a513bb8",
    "transactionHash": "0x12b05e6ccddc52e3c7d413e5242004518da13cc6048d4dc22ab9c2c93cfa97a8",
    "logs": [
      {
        "transactionIndex": 0,
        "blockNumber": 28,
        "transactionHash": "0x12b05e6ccddc52e3c7d413e5242004518da13cc6048d4dc22ab9c2c93cfa97a8",
        "address": "0xe688AeEF2C11745336a651cE0b116d4Af6073D26",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x000000000000000000000000e23b5a651a4f20b6029f5727e4850d364dcd90f8"
        ],
        "data": "0x",
        "logIndex": 0,
        "blockHash": "0x62698d8d002c63f3680de42dead415cc233fb037f218de912f60e1b16a513bb8"
      }
    ],
    "blockNumber": 28,
    "cumulativeGasUsed": "558306",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0xA632cc721C61F3612c59Fdb4C9a07Ea3C2AF9c71"
  ],
  "numDeployments": 1,
  "solcInputHash": "17381e43eabfaa35e5a112bb2f11fe3d",
  "metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_scharfnado\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"dispense\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"scharfnado\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_scharfnado\",\"type\":\"address\"}],\"name\":\"setScharfnado\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ScharfnadoFaucet.sol\":\"ScharfnadoFaucet\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address sender,\\n        address recipient,\\n        uint256 amount\\n    ) external returns (bool);\\n\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\\n\",\"keccak256\":\"0x61437cb513a887a1bbad006e7b1c8b414478427d33de47c5600af3c748f108da\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"contracts/ScharfnadoFaucet.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.4;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\n\\ncontract ScharfnadoFaucet is Ownable {\\n  IERC20 public scharfnado;\\n\\n  constructor(address _scharfnado) {\\n    scharfnado = IERC20(_scharfnado);\\n  }\\n\\n  function setScharfnado(address _scharfnado) external onlyOwner {\\n    scharfnado = IERC20(_scharfnado);\\n  }\\n\\n  function dispense() external payable {\\n    scharfnado.transfer(msg.sender, 1 ether);\\n  }\\n}\\n\",\"keccak256\":\"0xebf202f5a0f6d00dec7edce6390544c36b57a05400fa8dd6e9df8069e069422b\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50604051610a28380380610a2883398181016040528101906100329190610176565b61004e61004361009560201b60201c565b61009d60201b60201c565b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550506101e8565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600081519050610170816101d1565b92915050565b60006020828403121561018857600080fd5b600061019684828501610161565b91505092915050565b60006101aa826101b1565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6101da8161019f565b81146101e557600080fd5b50565b610831806101f76000396000f3fe6080604052600436106100555760003560e01c80630adb1a9a1461005a5780631d15a47b14610064578063715018a61461008d57806375358542146100a45780638da5cb5b146100cf578063f2fde38b146100fa575b600080fd5b610062610123565b005b34801561007057600080fd5b5061008b60048036038101906100869190610562565b6101dd565b005b34801561009957600080fd5b506100a261029d565b005b3480156100b057600080fd5b506100b9610325565b6040516100c6919061066b565b60405180910390f35b3480156100db57600080fd5b506100e461034b565b6040516100f19190610627565b60405180910390f35b34801561010657600080fd5b50610121600480360381019061011c9190610562565b610374565b005b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33670de0b6b3a76400006040518363ffffffff1660e01b8152600401610188929190610642565b602060405180830381600087803b1580156101a257600080fd5b505af11580156101b6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101da919061058b565b50565b6101e561046c565b73ffffffffffffffffffffffffffffffffffffffff1661020361034b565b73ffffffffffffffffffffffffffffffffffffffff1614610259576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610250906106a6565b60405180910390fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6102a561046c565b73ffffffffffffffffffffffffffffffffffffffff166102c361034b565b73ffffffffffffffffffffffffffffffffffffffff1614610319576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610310906106a6565b60405180910390fd5b6103236000610474565b565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b61037c61046c565b73ffffffffffffffffffffffffffffffffffffffff1661039a61034b565b73ffffffffffffffffffffffffffffffffffffffff16146103f0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103e7906106a6565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610460576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161045790610686565b60405180910390fd5b61046981610474565b50565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600081359050610547816107cd565b92915050565b60008151905061055c816107e4565b92915050565b60006020828403121561057457600080fd5b600061058284828501610538565b91505092915050565b60006020828403121561059d57600080fd5b60006105ab8482850161054d565b91505092915050565b6105bd816106d7565b82525050565b6105cc8161071f565b82525050565b6105db81610743565b82525050565b60006105ee6026836106c6565b91506105f982610755565b604082019050919050565b60006106116020836106c6565b915061061c826107a4565b602082019050919050565b600060208201905061063c60008301846105b4565b92915050565b600060408201905061065760008301856105b4565b61066460208301846105d2565b9392505050565b600060208201905061068060008301846105c3565b92915050565b6000602082019050818103600083015261069f816105e1565b9050919050565b600060208201905081810360008301526106bf81610604565b9050919050565b600082825260208201905092915050565b60006106e2826106f5565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600061072a82610731565b9050919050565b600061073c826106f5565b9050919050565b600061074e82610715565b9050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6107d6816106d7565b81146107e157600080fd5b50565b6107ed816106e9565b81146107f857600080fd5b5056fea264697066735822122036048114234698d303c5f3490d084953f93fd4ce153016e190a571b2fe1ccf9064736f6c63430008040033",
  "deployedBytecode": "0x6080604052600436106100555760003560e01c80630adb1a9a1461005a5780631d15a47b14610064578063715018a61461008d57806375358542146100a45780638da5cb5b146100cf578063f2fde38b146100fa575b600080fd5b610062610123565b005b34801561007057600080fd5b5061008b60048036038101906100869190610562565b6101dd565b005b34801561009957600080fd5b506100a261029d565b005b3480156100b057600080fd5b506100b9610325565b6040516100c6919061066b565b60405180910390f35b3480156100db57600080fd5b506100e461034b565b6040516100f19190610627565b60405180910390f35b34801561010657600080fd5b50610121600480360381019061011c9190610562565b610374565b005b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33670de0b6b3a76400006040518363ffffffff1660e01b8152600401610188929190610642565b602060405180830381600087803b1580156101a257600080fd5b505af11580156101b6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101da919061058b565b50565b6101e561046c565b73ffffffffffffffffffffffffffffffffffffffff1661020361034b565b73ffffffffffffffffffffffffffffffffffffffff1614610259576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610250906106a6565b60405180910390fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6102a561046c565b73ffffffffffffffffffffffffffffffffffffffff166102c361034b565b73ffffffffffffffffffffffffffffffffffffffff1614610319576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610310906106a6565b60405180910390fd5b6103236000610474565b565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b61037c61046c565b73ffffffffffffffffffffffffffffffffffffffff1661039a61034b565b73ffffffffffffffffffffffffffffffffffffffff16146103f0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103e7906106a6565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610460576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161045790610686565b60405180910390fd5b61046981610474565b50565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600081359050610547816107cd565b92915050565b60008151905061055c816107e4565b92915050565b60006020828403121561057457600080fd5b600061058284828501610538565b91505092915050565b60006020828403121561059d57600080fd5b60006105ab8482850161054d565b91505092915050565b6105bd816106d7565b82525050565b6105cc8161071f565b82525050565b6105db81610743565b82525050565b60006105ee6026836106c6565b91506105f982610755565b604082019050919050565b60006106116020836106c6565b915061061c826107a4565b602082019050919050565b600060208201905061063c60008301846105b4565b92915050565b600060408201905061065760008301856105b4565b61066460208301846105d2565b9392505050565b600060208201905061068060008301846105c3565b92915050565b6000602082019050818103600083015261069f816105e1565b9050919050565b600060208201905081810360008301526106bf81610604565b9050919050565b600082825260208201905092915050565b60006106e2826106f5565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600061072a82610731565b9050919050565b600061073c826106f5565b9050919050565b600061074e82610715565b9050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6107d6816106d7565b81146107e157600080fd5b50565b6107ed816106e9565b81146107f857600080fd5b5056fea264697066735822122036048114234698d303c5f3490d084953f93fd4ce153016e190a571b2fe1ccf9064736f6c63430008040033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 539,
        "contract": "contracts/ScharfnadoFaucet.sol:ScharfnadoFaucet",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 4681,
        "contract": "contracts/ScharfnadoFaucet.sol:ScharfnadoFaucet",
        "label": "scharfnado",
        "offset": 0,
        "slot": "1",
        "type": "t_contract(IERC20)1392"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_contract(IERC20)1392": {
        "encoding": "inplace",
        "label": "contract IERC20",
        "numberOfBytes": "20"
      }
    }
  }
}