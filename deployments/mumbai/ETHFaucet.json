{
  "address": "0x9A389BaE328881dDF7F99c9538b2C4A6f0602DEc",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "payable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "amountAllowed",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "donateTofaucet",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "lockTime",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address payable",
          "name": "_requestor",
          "type": "address"
        }
      ],
      "name": "requestTokens",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "newAmountAllowed",
          "type": "uint256"
        }
      ],
      "name": "setAmountallowed",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "setOwner",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x96f523ea6e300a615bfa98c4d74a5aa6e453e43a1213126809297782ed82c6d5",
  "receipt": {
    "to": null,
    "from": "0xE23B5A651A4f20B6029f5727E4850d364dCd90f8",
    "contractAddress": "0x9A389BaE328881dDF7F99c9538b2C4A6f0602DEc",
    "transactionIndex": 34,
    "gasUsed": "641960",
    "logsBloom": "0x
    "blockHash": "0x2ce0244605a40202409443ddb35cc8bd9a34abae8d41ad8c828a74214c6f64da",
    "transactionHash": "0x96f523ea6e300a615bfa98c4d74a5aa6e453e43a1213126809297782ed82c6d5",
    "logs": [
      {
        "transactionIndex": 34,
        "blockNumber": 24656541,
        "transactionHash": "0x96f523ea6e300a615bfa98c4d74a5aa6e453e43a1213126809297782ed82c6d5",
        "address": "0x0000000000000000000000000000000000001010",
        "topics": [
          "0x4dfe1bbbcf077ddc3e01291eea2d5c70c2b422b415d95645b9adcfd678cb1d63",
          "0x0000000000000000000000000000000000000000000000000000000000001010",
          "0x000000000000000000000000e23b5a651a4f20b6029f5727e4850d364dcd90f8",
          "0x000000000000000000000000be188d6641e8b680743a4815dfa0f6208038960f"
        ],
        "data": "0x00000000000000000000000000000000000000000000000000048fb7eae865800000000000000000000000000000000000000000000000001abff940f9beae790000000000000000000000000000000000000000000006529dd7a719e3afb4e00000000000000000000000000000000000000000000000001abb69890ed648f90000000000000000000000000000000000000000000006529ddc36d1ce981a60",
        "logIndex": 107,
        "blockHash": "0x2ce0244605a40202409443ddb35cc8bd9a34abae8d41ad8c828a74214c6f64da"
      }
    ],
    "blockNumber": 24656541,
    "cumulativeGasUsed": "6077530",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "cbe3cca7514b236e9fd343f777a6a157",
  "metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"payable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"amountAllowed\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"donateTofaucet\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"lockTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"_requestor\",\"type\":\"address\"}],\"name\":\"requestTokens\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newAmountAllowed\",\"type\":\"uint256\"}],\"name\":\"setAmountallowed\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"setOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ETHFaucet.sol\":\"ETHFaucet\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (security/ReentrancyGuard.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Contract module that helps prevent reentrant calls to a function.\\n *\\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\\n * available, which can be applied to functions to make sure there are no nested\\n * (reentrant) calls to them.\\n *\\n * Note that because there is a single `nonReentrant` guard, functions marked as\\n * `nonReentrant` may not call one another. This can be worked around by making\\n * those functions `private`, and then adding `external` `nonReentrant` entry\\n * points to them.\\n *\\n * TIP: If you would like to learn more about reentrancy and alternative ways\\n * to protect against it, check out our blog post\\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\\n */\\nabstract contract ReentrancyGuard {\\n    // Booleans are more expensive than uint256 or any type that takes up a full\\n    // word because each write operation emits an extra SLOAD to first read the\\n    // slot's contents, replace the bits taken up by the boolean, and then write\\n    // back. This is the compiler's defense against contract upgrades and\\n    // pointer aliasing, and it cannot be disabled.\\n\\n    // The values being non-zero value makes deployment a bit more expensive,\\n    // but in exchange the refund on every call to nonReentrant will be lower in\\n    // amount. Since refunds are capped to a percentage of the total\\n    // transaction's gas, it is best to keep them low in cases like this one, to\\n    // increase the likelihood of the full refund coming into effect.\\n    uint256 private constant _NOT_ENTERED = 1;\\n    uint256 private constant _ENTERED = 2;\\n\\n    uint256 private _status;\\n\\n    constructor() {\\n        _status = _NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Prevents a contract from calling itself, directly or indirectly.\\n     * Calling a `nonReentrant` function from another `nonReentrant`\\n     * function is not supported. It is possible to prevent this from happening\\n     * by making the `nonReentrant` function external, and making it call a\\n     * `private` function that does the actual work.\\n     */\\n    modifier nonReentrant() {\\n        // On the first call to nonReentrant, _notEntered will be true\\n        require(_status != _ENTERED, \\\"ReentrancyGuard: reentrant call\\\");\\n\\n        // Any calls to nonReentrant after this point will fail\\n        _status = _ENTERED;\\n\\n        _;\\n\\n        // By storing the original value once again, a refund is triggered (see\\n        // https://eips.ethereum.org/EIPS/eip-2200)\\n        _status = _NOT_ENTERED;\\n    }\\n}\\n\",\"keccak256\":\"0x0e9621f60b2faabe65549f7ed0f24e8853a45c1b7990d47e8160e523683f3935\",\"license\":\"MIT\"},\"contracts/ETHFaucet.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.4;\\n\\nimport \\\"@openzeppelin/contracts/security/ReentrancyGuard.sol\\\";\\n\\ncontract ETHFaucet is ReentrancyGuard {\\n  //state variable to keep track of owner and amount of ETHER to dispense\\n  address public owner;\\n  uint256 public amountAllowed = 1 ether;\\n\\n  //mapping to keep track of requested rokens\\n  //Address and blocktime + 1 day is saved in TimeLock\\n  mapping(address => uint256) public lockTime;\\n\\n  //constructor to set the owner\\n  constructor() payable {\\n    owner = msg.sender;\\n  }\\n\\n  //function modifier\\n  modifier onlyOwner() {\\n    require(msg.sender == owner, \\\"Only owner can call this function.\\\");\\n    _;\\n  }\\n\\n  //function to change the owner.  Only the owner of the contract can call this function\\n  function setOwner(address newOwner) public onlyOwner {\\n    owner = newOwner;\\n  }\\n\\n  //function to set the amount allowable to be claimed. Only the owner can call this function\\n  function setAmountallowed(uint256 newAmountAllowed) public onlyOwner {\\n    amountAllowed = newAmountAllowed;\\n  }\\n\\n  //function to donate funds to the faucet contract\\n  function donateTofaucet() public payable {}\\n\\n  //function to send tokens from faucet to an address\\n  function requestTokens(address payable _requestor)\\n    public\\n    payable\\n    nonReentrant\\n  {\\n    //perform a few checks to make sure function can execute\\n    require(\\n      block.timestamp > lockTime[msg.sender],\\n      \\\"lock time has not expired. Please try again later\\\"\\n    );\\n    require(\\n      address(this).balance > amountAllowed,\\n      \\\"Not enough funds in the faucet. Please donate\\\"\\n    );\\n\\n    //if the balance of this contract is greater then the requested amount send funds\\n    _requestor.transfer(amountAllowed);\\n\\n    //updates locktime 1 day from now\\n    lockTime[msg.sender] = block.timestamp + 1 days;\\n  }\\n}\\n\",\"keccak256\":\"0x0a82e14dc8c475634e7eb3dda09d95ab993039c7afb6690346f3b599910c88e8\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x6080604052670de0b6b3a7640000600255600160008190555033600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555061097c806100686000396000f3fe6080604052600436106100705760003560e01c80638da5cb5b1161004e5780638da5cb5b146100c45780639ad2cd14146100ef578063a4beda631461011a578063f3aa52a11461015757610070565b806313af403514610075578063580f39041461009e578063605e73cd146100ba575b600080fd5b34801561008157600080fd5b5061009c6004803603810190610097919061052c565b610180565b005b6100b860048036038101906100b39190610555565b610254565b005b6100c261040d565b005b3480156100d057600080fd5b506100d961040f565b6040516100e69190610651565b60405180910390f35b3480156100fb57600080fd5b50610104610435565b60405161011191906106ec565b60405180910390f35b34801561012657600080fd5b50610141600480360381019061013c919061052c565b61043b565b60405161014e91906106ec565b60405180910390f35b34801561016357600080fd5b5061017e6004803603810190610179919061057e565b610453565b005b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610210576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102079061066c565b60405180910390fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6002600054141561029a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610291906106cc565b60405180910390fd5b6002600081905550600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020544211610323576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161031a9061068c565b60405180910390fd5b6002544711610367576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161035e906106ac565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff166108fc6002549081150290604051600060405180830381858888f193505050501580156103af573d6000803e3d6000fd5b5062015180426103bf9190610718565b600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550600160008190555050565b565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60025481565b60036020528060005260406000206000915090505481565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146104e3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104da9061066c565b60405180910390fd5b8060028190555050565b6000813590506104fc81610901565b92915050565b60008135905061051181610918565b92915050565b6000813590506105268161092f565b92915050565b60006020828403121561053e57600080fd5b600061054c848285016104ed565b91505092915050565b60006020828403121561056757600080fd5b600061057584828501610502565b91505092915050565b60006020828403121561059057600080fd5b600061059e84828501610517565b91505092915050565b6105b08161076e565b82525050565b60006105c3602283610707565b91506105ce826107eb565b604082019050919050565b60006105e6603183610707565b91506105f18261083a565b604082019050919050565b6000610609602d83610707565b915061061482610889565b604082019050919050565b600061062c601f83610707565b9150610637826108d8565b602082019050919050565b61064b816107b2565b82525050565b600060208201905061066660008301846105a7565b92915050565b60006020820190508181036000830152610685816105b6565b9050919050565b600060208201905081810360008301526106a5816105d9565b9050919050565b600060208201905081810360008301526106c5816105fc565b9050919050565b600060208201905081810360008301526106e58161061f565b9050919050565b60006020820190506107016000830184610642565b92915050565b600082825260208201905092915050565b6000610723826107b2565b915061072e836107b2565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610763576107626107bc565b5b828201905092915050565b600061077982610792565b9050919050565b600061078b82610792565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4f6e6c79206f776e65722063616e2063616c6c20746869732066756e6374696f60008201527f6e2e000000000000000000000000000000000000000000000000000000000000602082015250565b7f6c6f636b2074696d6520686173206e6f7420657870697265642e20506c65617360008201527f652074727920616761696e206c61746572000000000000000000000000000000602082015250565b7f4e6f7420656e6f7567682066756e647320696e20746865206661756365742e2060008201527f506c6561736520646f6e61746500000000000000000000000000000000000000602082015250565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00600082015250565b61090a8161076e565b811461091557600080fd5b50565b61092181610780565b811461092c57600080fd5b50565b610938816107b2565b811461094357600080fd5b5056fea2646970667358221220afb189f98db6d1d8caca2a6ed32dfed532f9ffc7bcd98818140c3cadb70b500664736f6c63430008040033",
  "deployedBytecode": "0x6080604052600436106100705760003560e01c80638da5cb5b1161004e5780638da5cb5b146100c45780639ad2cd14146100ef578063a4beda631461011a578063f3aa52a11461015757610070565b806313af403514610075578063580f39041461009e578063605e73cd146100ba575b600080fd5b34801561008157600080fd5b5061009c6004803603810190610097919061052c565b610180565b005b6100b860048036038101906100b39190610555565b610254565b005b6100c261040d565b005b3480156100d057600080fd5b506100d961040f565b6040516100e69190610651565b60405180910390f35b3480156100fb57600080fd5b50610104610435565b60405161011191906106ec565b60405180910390f35b34801561012657600080fd5b50610141600480360381019061013c919061052c565b61043b565b60405161014e91906106ec565b60405180910390f35b34801561016357600080fd5b5061017e6004803603810190610179919061057e565b610453565b005b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610210576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102079061066c565b60405180910390fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6002600054141561029a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610291906106cc565b60405180910390fd5b6002600081905550600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020544211610323576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161031a9061068c565b60405180910390fd5b6002544711610367576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161035e906106ac565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff166108fc6002549081150290604051600060405180830381858888f193505050501580156103af573d6000803e3d6000fd5b5062015180426103bf9190610718565b600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550600160008190555050565b565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60025481565b60036020528060005260406000206000915090505481565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146104e3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104da9061066c565b60405180910390fd5b8060028190555050565b6000813590506104fc81610901565b92915050565b60008135905061051181610918565b92915050565b6000813590506105268161092f565b92915050565b60006020828403121561053e57600080fd5b600061054c848285016104ed565b91505092915050565b60006020828403121561056757600080fd5b600061057584828501610502565b91505092915050565b60006020828403121561059057600080fd5b600061059e84828501610517565b91505092915050565b6105b08161076e565b82525050565b60006105c3602283610707565b91506105ce826107eb565b604082019050919050565b60006105e6603183610707565b91506105f18261083a565b604082019050919050565b6000610609602d83610707565b915061061482610889565b604082019050919050565b600061062c601f83610707565b9150610637826108d8565b602082019050919050565b61064b816107b2565b82525050565b600060208201905061066660008301846105a7565b92915050565b60006020820190508181036000830152610685816105b6565b9050919050565b600060208201905081810360008301526106a5816105d9565b9050919050565b600060208201905081810360008301526106c5816105fc565b9050919050565b600060208201905081810360008301526106e58161061f565b9050919050565b60006020820190506107016000830184610642565b92915050565b600082825260208201905092915050565b6000610723826107b2565b915061072e836107b2565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610763576107626107bc565b5b828201905092915050565b600061077982610792565b9050919050565b600061078b82610792565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4f6e6c79206f776e65722063616e2063616c6c20746869732066756e6374696f60008201527f6e2e000000000000000000000000000000000000000000000000000000000000602082015250565b7f6c6f636b2074696d6520686173206e6f7420657870697265642e20506c65617360008201527f652074727920616761696e206c61746572000000000000000000000000000000602082015250565b7f4e6f7420656e6f7567682066756e647320696e20746865206661756365742e2060008201527f506c6561736520646f6e61746500000000000000000000000000000000000000602082015250565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00600082015250565b61090a8161076e565b811461091557600080fd5b50565b61092181610780565b811461092c57600080fd5b50565b610938816107b2565b811461094357600080fd5b5056fea2646970667358221220afb189f98db6d1d8caca2a6ed32dfed532f9ffc7bcd98818140c3cadb70b500664736f6c63430008040033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 739,
        "contract": "contracts/ETHFaucet.sol:ETHFaucet",
        "label": "_status",
        "offset": 0,
        "slot": "0",
        "type": "t_uint256"
      },
      {
        "astId": 4010,
        "contract": "contracts/ETHFaucet.sol:ETHFaucet",
        "label": "owner",
        "offset": 0,
        "slot": "1",
        "type": "t_address"
      },
      {
        "astId": 4013,
        "contract": "contracts/ETHFaucet.sol:ETHFaucet",
        "label": "amountAllowed",
        "offset": 0,
        "slot": "2",
        "type": "t_uint256"
      },
      {
        "astId": 4017,
        "contract": "contracts/ETHFaucet.sol:ETHFaucet",
        "label": "lockTime",
        "offset": 0,
        "slot": "3",
        "type": "t_mapping(t_address,t_uint256)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}